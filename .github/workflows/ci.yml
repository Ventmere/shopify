name: CI

permissions:
  pull-requests: write
  contents: write

#  Run continuous integration on all branches
on: push

env:
  CARGO_TERM_COLOR: always

#  Build and test the code with each rust toolchain
jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, nightly, beta]
    steps:
    - name: Install ${{ matrix.toolchain }}
      run: rustup install ${{ matrix.toolchain }}
    - name: Set toolchain
      run: rustup default ${{ matrix.toolchain }}
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
      
    - name: Run tests
      run: cargo test --verbose

  format:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
    - uses: actions/checkout@v3
    - name: Cargo fmt
      run: cargo fmt --all --check ## or use 'cargo ftm --check' to just fail the pipe instead

# This commit the code after cargo fmt --all
#       - uses: stefanzweifel/git-auto-commit-action@v4
      
# Maintains CHANGELOG.md, bumps version in cargo.toml and creates PR against current branch
  release-PR:
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@v0.5
        with:
          command: release-pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
